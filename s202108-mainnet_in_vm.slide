# 在 VM 虛擬機建置 Cardano 主網礦池
Cardano 區塊鏈測試鏈
19:30 28 Mar 2020
Tags: golang, go, cht
Summary: This is a great document you want to read.
OldURL: former-path-for-this-doc

陳敬翔
資訊學系培訓師, 中華電信學院
oneleo@cht.com.tw
https://github.com/oneleo
@oneleo760823


// --------------------------------------------------

## 起源

- 有鑑於最近 ADA 幣[價格上漲][1]
- 且可用於建置 [Cardano 礦池的容器][2]在 2021/08/24 有更新
- 所以讓我們跟隨 [Cardano 官方文件][3]學習，在 VM 虛擬機中建置自己的礦池吧！
- 註：本簡報按下鍵盤「N」鍵可觀看註解
- 註：根據 [Cardano 官方建置礦池的守則][4]中提及，若要建置用於可提供服務的礦池，需確定自己符合以下幾點規範：
	- 具備建置、執行、維護 Cardano 節點的能力
	- 可保證 Cardano 節點可連續每天 24 小時 x 每週 7 天 x 每年 365 天不間斷提供服務
	- 具備服務提供系統的操作能力
	- 具備伺服器管理（操作和維護）能力
	- 若具備軟體開發和維運（DevOps）經驗將會非常有幫助
	- 伺服器至少具備 1 組固定的 IPv4 IP、1Gb 網路頻寬、8 GB RAM、24 GB 磁碟空間

[1]: https://www.blocktempo.com/ada-break-ath-after-announcing-the-new-upgrade "兩週暴漲 180%，ADA 再創新高 2.5 鎂！Cardano 9 月將引進智能合約發展 DeFi"
[2]: https://hub.docker.com/r/inputoutput/cardano-node "cardano-node"
[3]: https://docs.cardano.org/getting-started/installing-the-cardano-node "Installing the Cardano node"
[4]: https://docs.cardano.org/getting-started/operating-a-stake-pool/creating-a-stake-pool "Creating a stake pool"

// --------------------------------------------------

## 準備虛擬環境

- 至 [Ubuntu 官網][1] 下載 LTS 長期支援版 iso 映象檔

[1]: https://ubuntu.com/download/desktop "Ubuntu desktop"

.image ./images/i20210831/i20210831.02-ubuntu.png _ 750

// --------------------------------------------------

## 準備虛擬環境

- 確認自己有 VMware Workstation Pro 16 虛擬機軟體 Key 後，至 [VMware 官網](https://www.vmware.com/products/workstation-pro/workstation-pro-evaluation.html)下載  

.image ./images/i20210831/i20210831.01-workstation.png _ 750

: 補充：若沒有 License Key 的話，可以 Google 關鍵字，說不定會有所收獲。

// --------------------------------------------------

## 準備虛擬環境

- 建置新的 Virtual Machine

.image ./images/i20210831/i20210831.03-newvm.png _ 750

// --------------------------------------------------

## 為避免本簡報過於冗長，這邊只提示幾個建置 VM 的參數

- 伺服器至少要有 8 GB 的 RAM，所以這裡 VM 設定相同資源

.image ./images/i20210831/i20210831.04-ram.png _ 500

// --------------------------------------------------

## 為避免本簡報過於冗長，這邊只提示幾個建置 VM 的參數

- 伺服器需具備 1 組固定的 IPv4 IP，所以 VM 網路使用 bridge 模式（與 Host 母體同一網段）以貼近實際情形

.image ./images/i20210831/i20210831.05-network.png _ 500

// --------------------------------------------------

## 為避免本簡報過於冗長，這邊只提示幾個建置 VM 的參數

- 為貼近真實建置伺服器之情形，所以增加存放 Cardano 資料的磁碟（至少 24 GB）

.image ./images/i20210831/i20210831.06-datadisk.png _ 750

// --------------------------------------------------

## Ubuntu Desktop 安裝完成後先進行更新及必要軟體安裝

- 先使用「Software Update」進行系統更新

.image ./images/i20210831/i20210831.07-update.png _ 950

// --------------------------------------------------

## Ubuntu Desktop 安裝完成後先進行更新及必要軟體安裝

- 再開啟「Terminal」終端機，以使用指令完成必要軟體安裝

.image ./images/i20210831/i20210831.08-terminal.png _ 950

// --------------------------------------------------

## Ubuntu Desktop 安裝完成後先進行更新及必要軟體安裝

1. 更新套件資料庫及進行作業系統相依性更新（指令不包含「$」符號）

	```bash
	$ sudo apt-get update && sudo apt-get -y upgrade && sudo apt-get -y dist-upgrade
	```

2. 安裝 VM 虛擬機的驅動程式

	```bash
	$ sudo apt-get -y install open-vm-tools-desktop
	```

3. 重新開機讓驅動程式生效（接著可將指令用熱鍵「Ctrl + Shift + V」貼入 VM）

	```bash
	$ sudo sync && sudo reboot
	```

4. 再次開啟「Terminal」終端機，安裝 SSH 遠端工具、ufw 簡易防火牆設定工具、nano 文字編輯工具、curl 抓取工具、xfsprogs 磁碟格式化工具、util-linux 通用工具

	```bash
	$ sudo apt-get -y install ssh ufw nano net-tools curl xfsprogs util-linux podman
	```

5. 安裝具 Daemonless、Rootless 特色的 [Podman 容器引擎][1]（指令超出部份請觀看此連結）

	```bash
	$ . /etc/os-release
	$ echo "deb https://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable/xUbuntu_${VERSION_ID}/ /" | sudo tee /etc/apt/sources.list.d/devel:kubic:libcontainers:stable.list
	$ curl -L "https://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable/xUbuntu_${VERSION_ID}/Release.key" | sudo apt-key add -
	$ sudo apt-get update
	$ sudo apt-get -y upgrade
	$ sudo apt-get -y install podman
	```

[1]: https://podman.io/getting-started/installation#ubuntu "Podman"

// --------------------------------------------------

## 將第二顆磁碟格式化成 xfs 檔案系統以用於儲存 Cardano 節點資料

1. 可視自身需要格式化所需的[檔案系統][1]，格式化 xfs 細節可參考[此網站][2]
2. 找到這顆磁碟（這裡以格式化 sdb 磁碟為例）

	```bash
	$ lsblk -o NAME,HCTL,SIZE,MOUNTPOINT | grep -i "sd"
	```

[1]: https://zh.wikipedia.org/wiki/文件系统的对比 "File System"
[2]: https://docs.microsoft.com/zh-tw/azure/virtual-machines/linux/attach-disk-portal "使用入口網站將資料磁碟附加至 Linux VM"


.image ./images/i20210831/i20210831.09-lsblk.png _ 750

// --------------------------------------------------

## 將第二顆磁碟格式化成 xfs 檔案系統以用於儲存 Cardano 節點資料

3. 將整個 sdb 進行磁碟分割及格式化成 xfs 檔案系統

	```bash
	$ sudo parted /dev/sdb --script mklabel gpt mkpart xfspart xfs 0% 100%
	$ sudo mkfs.xfs /dev/sdb1
	$ sudo partprobe /dev/sdb1
	```

4. 再次查看磁碟列表，可以看到磁碟 sdb1 已順利格式化完成

	```bash
	$ lsblk -o NAME,HCTL,SIZE,MOUNTPOINT | grep -i "sd"
	```

.image ./images/i20210831/i20210831.10-sdb1.png _ 500

// --------------------------------------------------

## 將第二顆磁碟格式化成 xfs 檔案系統以用於儲存 Cardano 節點資料

5. 將 sdb1 磁碟掛載至 /datadrive（位置可視自身情況調整）

	```bash
	$ sudo mkdir -p /datadrive
	$ sudo mount /dev/sdb1 /datadrive
	```

6. 設置開機時自動掛載指定 UUID 的磁碟（這邊以自動掛載 /dev/sdb1 為例，並記下專屬於自身情況之 UUID 值）

	```bash
	$ sudo blkid
	```

.image ./images/i20210831/i20210831.11-sdb1uuid.png _ 1000

// --------------------------------------------------

## 將第二顆磁碟格式化成 xfs 檔案系統以用於儲存 Cardano 節點資料

7. 修改開機時自動掛載磁碟列表

	```bash
	$ sudo nano /etc/fstab
	```

8. 在 /etc/fstab 最下方新增 2 列（再使用熱鍵「Ctrl + O」+「Enter」存檔→「Ctrl + X」關閉）

	```
	# /datadrive was on /dev/sdb1 during installation
	UUID=a758e667-6c09-4b13-9471-187d71a313b4	/datadrive	xfs	defaults,nofail	1	2
	```

.image ./images/i20210831/i20210831.12-fstab.png _ 1000

// --------------------------------------------------

## 開始建置 Cardano 節點

1. 建立 Cardano 節點會用到的目錄，並更改存取權限

	```bash
	$ sudo mkdir -p /datadrive/cardano-node-data
	$ sudo mkdir -p /datadrive/cardano-node-ipc
	$ sudo chown -R "$USER":"$USER" /datadrive/*
	$ sudo chmod -R 755 /datadrive/*
	```
2. 下載 cardano-node Container Image

	```bash
	$ podman pull docker.io/inputoutput/cardano-node:latest
	```

3. 啟動 cardano-node Container

	```bash
	$ podman run -d --restart=always -it -e NETWORK=mainnet -e CARDANO_NODE_SOCKET_PATH=/ipc/node.socket \
	-p 3001:3001 --name cardano-node -v /datadrive/cardano-node-ipc:/ipc \
	-v /datadrive/cardano-node-data:/data docker.io/inputoutput/cardano-node:latest
	```

4. 下載官方編譯好的 cardano-node 可執行檔至容器 /bin 目錄內（容器內只有 cardano-cli 可執行檔）

	```bash
	$ cd /tmp
	$ wget -N https://hydra.iohk.io/job/Cardano/cardano-node/cardano-node-linux/latest-finished/download -P /tmp
	$ mv /tmp/download /tmp/cardano-node.tar.gz
	$ tar -zxv -f "/tmp/cardano-node.tar.gz" -C "/tmp"
	//$ podman cp /tmp/cardano-node cardano-node:/cardano-node
	```

// --------------------------------------------------

## 開始建置 Cardano 節點


4. 查看容器內的 cardano-node 及 cardano-cli 版本

	```bash
	$ podman exec -it cardano-node cardano-node version
	$ podman exec -it cardano-node cardano-cli version
	```

// --------------------------------------------------



// --------------------------------------------------


// --------------------------------------------------


// --------------------------------------------------
